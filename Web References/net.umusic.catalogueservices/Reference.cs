//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SEDOGv2.net.umusic.catalogueservices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecureDataServicesSoap", Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Asset))]
    public partial class SecureDataServices : Microsoft.Web.Services3.WebServicesClientProtocol {// System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetContributorsByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductIdByUpcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductIdListByUpcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductListByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTracklistingForProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductIdsByReleaseDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsByContributorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseGroupsByContributorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseGroupProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseGroupContributorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatedCoverArtInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBiographiesByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBiographiesByArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressPhotosByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressPhotosByArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicityPhotosByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoverArtByUPCListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicityPhotosByArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistMerchandisingAssetsByBarcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressReleasesByProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPressReleasesByArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJpegRgbAssetAsStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentAssetAsStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsArticlesByArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsArticlesByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsArticleByContentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SecureDataServices() {
            this.Url = global::SEDOGv2.Properties.Settings.Default.SEDOGv2_net_umusic_catalogueservices_SecureDataServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetContributorsByProductCompletedEventHandler GetContributorsByProductCompleted;
        
        /// <remarks/>
        public event GetProductIdByUpcCompletedEventHandler GetProductIdByUpcCompleted;
        
        /// <remarks/>
        public event GetProductIdListByUpcCompletedEventHandler GetProductIdListByUpcCompleted;
        
        /// <remarks/>
        public event GetProductByIdCompletedEventHandler GetProductByIdCompleted;
        
        /// <remarks/>
        public event GetProductListByIdCompletedEventHandler GetProductListByIdCompleted;
        
        /// <remarks/>
        public event GetTracklistingForProductCompletedEventHandler GetTracklistingForProductCompleted;
        
        /// <remarks/>
        public event GetProductIdsByReleaseDateCompletedEventHandler GetProductIdsByReleaseDateCompleted;
        
        /// <remarks/>
        public event GetProductsByContributorIdCompletedEventHandler GetProductsByContributorIdCompleted;
        
        /// <remarks/>
        public event GetReleaseGroupByIdCompletedEventHandler GetReleaseGroupByIdCompleted;
        
        /// <remarks/>
        public event GetReleaseGroupsByContributorIdCompletedEventHandler GetReleaseGroupsByContributorIdCompleted;
        
        /// <remarks/>
        public event GetReleaseGroupProductsCompletedEventHandler GetReleaseGroupProductsCompleted;
        
        /// <remarks/>
        public event GetReleaseGroupContributorsCompletedEventHandler GetReleaseGroupContributorsCompleted;
        
        /// <remarks/>
        public event GetUpdatedCoverArtInformationCompletedEventHandler GetUpdatedCoverArtInformationCompleted;
        
        /// <remarks/>
        public event GetBiographiesByProductCompletedEventHandler GetBiographiesByProductCompleted;
        
        /// <remarks/>
        public event GetBiographiesByArtistCompletedEventHandler GetBiographiesByArtistCompleted;
        
        /// <remarks/>
        public event GetPressPhotosByProductCompletedEventHandler GetPressPhotosByProductCompleted;
        
        /// <remarks/>
        public event GetPressPhotosByArtistCompletedEventHandler GetPressPhotosByArtistCompleted;
        
        /// <remarks/>
        public event GetPublicityPhotosByProductCompletedEventHandler GetPublicityPhotosByProductCompleted;
        
        /// <remarks/>
        public event GetCoverArtByUPCListCompletedEventHandler GetCoverArtByUPCListCompleted;
        
        /// <remarks/>
        public event GetPublicityPhotosByArtistCompletedEventHandler GetPublicityPhotosByArtistCompleted;
        
        /// <remarks/>
        public event GetArtistMerchandisingAssetsByBarcodeCompletedEventHandler GetArtistMerchandisingAssetsByBarcodeCompleted;
        
        /// <remarks/>
        public event GetPressReleasesByProductCompletedEventHandler GetPressReleasesByProductCompleted;
        
        /// <remarks/>
        public event GetPressReleasesByArtistCompletedEventHandler GetPressReleasesByArtistCompleted;
        
        /// <remarks/>
        public event GetJpegRgbAssetAsStreamCompletedEventHandler GetJpegRgbAssetAsStreamCompleted;
        
        /// <remarks/>
        public event GetDocumentAssetAsStreamCompletedEventHandler GetDocumentAssetAsStreamCompleted;
        
        /// <remarks/>
        public event GetNewsArticlesByArtistCompletedEventHandler GetNewsArticlesByArtistCompleted;
        
        /// <remarks/>
        public event GetNewsArticlesByDateRangeCompletedEventHandler GetNewsArticlesByDateRangeCompleted;
        
        /// <remarks/>
        public event GetNewsArticlesCompletedEventHandler GetNewsArticlesCompleted;
        
        /// <remarks/>
        public event GetNewsArticleByContentIdCompletedEventHandler GetNewsArticleByContentIdCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetContributorsByProduct" +
            "", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contributor[] GetContributorsByProduct(long productID) {
            object[] results = this.Invoke("GetContributorsByProduct", new object[] {
                        productID});
            return ((Contributor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContributorsByProductAsync(long productID) {
            this.GetContributorsByProductAsync(productID, null);
        }
        
        /// <remarks/>
        public void GetContributorsByProductAsync(long productID, object userState) {
            if ((this.GetContributorsByProductOperationCompleted == null)) {
                this.GetContributorsByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContributorsByProductOperationCompleted);
            }
            this.InvokeAsync("GetContributorsByProduct", new object[] {
                        productID}, this.GetContributorsByProductOperationCompleted, userState);
        }
        
        private void OnGetContributorsByProductOperationCompleted(object arg) {
            if ((this.GetContributorsByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContributorsByProductCompleted(this, new GetContributorsByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductIdByUpc", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetProductIdByUpc(string upc) {
            object[] results = this.Invoke("GetProductIdByUpc", new object[] {
                        upc});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductIdByUpcAsync(string upc) {
            this.GetProductIdByUpcAsync(upc, null);
        }
        
        /// <remarks/>
        public void GetProductIdByUpcAsync(string upc, object userState) {
            if ((this.GetProductIdByUpcOperationCompleted == null)) {
                this.GetProductIdByUpcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductIdByUpcOperationCompleted);
            }
            this.InvokeAsync("GetProductIdByUpc", new object[] {
                        upc}, this.GetProductIdByUpcOperationCompleted, userState);
        }
        
        private void OnGetProductIdByUpcOperationCompleted(object arg) {
            if ((this.GetProductIdByUpcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductIdByUpcCompleted(this, new GetProductIdByUpcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductIdListByUpc", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetProductIdListByUpc(string[] upcList) {
            object[] results = this.Invoke("GetProductIdListByUpc", new object[] {
                        upcList});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductIdListByUpcAsync(string[] upcList) {
            this.GetProductIdListByUpcAsync(upcList, null);
        }
        
        /// <remarks/>
        public void GetProductIdListByUpcAsync(string[] upcList, object userState) {
            if ((this.GetProductIdListByUpcOperationCompleted == null)) {
                this.GetProductIdListByUpcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductIdListByUpcOperationCompleted);
            }
            this.InvokeAsync("GetProductIdListByUpc", new object[] {
                        upcList}, this.GetProductIdListByUpcOperationCompleted, userState);
        }
        
        private void OnGetProductIdListByUpcOperationCompleted(object arg) {
            if ((this.GetProductIdListByUpcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductIdListByUpcCompleted(this, new GetProductIdListByUpcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductById", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("product", IsNullable=true)]
        public Product GetProductById(long productId) {
            object[] results = this.Invoke("GetProductById", new object[] {
                        productId});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(long productId) {
            this.GetProductByIdAsync(productId, null);
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(long productId, object userState) {
            if ((this.GetProductByIdOperationCompleted == null)) {
                this.GetProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductById", new object[] {
                        productId}, this.GetProductByIdOperationCompleted, userState);
        }
        
        private void OnGetProductByIdOperationCompleted(object arg) {
            if ((this.GetProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductListById", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetProductListById(long[] productIdList) {
            object[] results = this.Invoke("GetProductListById", new object[] {
                        productIdList});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductListByIdAsync(long[] productIdList) {
            this.GetProductListByIdAsync(productIdList, null);
        }
        
        /// <remarks/>
        public void GetProductListByIdAsync(long[] productIdList, object userState) {
            if ((this.GetProductListByIdOperationCompleted == null)) {
                this.GetProductListByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductListByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductListById", new object[] {
                        productIdList}, this.GetProductListByIdOperationCompleted, userState);
        }
        
        private void OnGetProductListByIdOperationCompleted(object arg) {
            if ((this.GetProductListByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductListByIdCompleted(this, new GetProductListByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetTracklistingForProduc" +
            "t", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("productComponents", IsNullable=true)]
        public ComponentCollection GetTracklistingForProduct(long productId) {
            object[] results = this.Invoke("GetTracklistingForProduct", new object[] {
                        productId});
            return ((ComponentCollection)(results[0]));
        }
        
        /// <remarks/>
        public void GetTracklistingForProductAsync(long productId) {
            this.GetTracklistingForProductAsync(productId, null);
        }
        
        /// <remarks/>
        public void GetTracklistingForProductAsync(long productId, object userState) {
            if ((this.GetTracklistingForProductOperationCompleted == null)) {
                this.GetTracklistingForProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTracklistingForProductOperationCompleted);
            }
            this.InvokeAsync("GetTracklistingForProduct", new object[] {
                        productId}, this.GetTracklistingForProductOperationCompleted, userState);
        }
        
        private void OnGetTracklistingForProductOperationCompleted(object arg) {
            if ((this.GetTracklistingForProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTracklistingForProductCompleted(this, new GetTracklistingForProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductIdsByReleaseDa" +
            "te", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetProductIdsByReleaseDate(System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetProductIdsByReleaseDate", new object[] {
                        dateFrom,
                        dateTo});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductIdsByReleaseDateAsync(System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetProductIdsByReleaseDateAsync(dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetProductIdsByReleaseDateAsync(System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetProductIdsByReleaseDateOperationCompleted == null)) {
                this.GetProductIdsByReleaseDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductIdsByReleaseDateOperationCompleted);
            }
            this.InvokeAsync("GetProductIdsByReleaseDate", new object[] {
                        dateFrom,
                        dateTo}, this.GetProductIdsByReleaseDateOperationCompleted, userState);
        }
        
        private void OnGetProductIdsByReleaseDateOperationCompleted(object arg) {
            if ((this.GetProductIdsByReleaseDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductIdsByReleaseDateCompleted(this, new GetProductIdsByReleaseDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetProductsByContributor" +
            "Id", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetProductsByContributorId(long contributorId) {
            object[] results = this.Invoke("GetProductsByContributorId", new object[] {
                        contributorId});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsByContributorIdAsync(long contributorId) {
            this.GetProductsByContributorIdAsync(contributorId, null);
        }
        
        /// <remarks/>
        public void GetProductsByContributorIdAsync(long contributorId, object userState) {
            if ((this.GetProductsByContributorIdOperationCompleted == null)) {
                this.GetProductsByContributorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsByContributorIdOperationCompleted);
            }
            this.InvokeAsync("GetProductsByContributorId", new object[] {
                        contributorId}, this.GetProductsByContributorIdOperationCompleted, userState);
        }
        
        private void OnGetProductsByContributorIdOperationCompleted(object arg) {
            if ((this.GetProductsByContributorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsByContributorIdCompleted(this, new GetProductsByContributorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetReleaseGroupById", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("releaseGroup", IsNullable=true)]
        public ReleaseGroup GetReleaseGroupById(long releaseGroupId) {
            object[] results = this.Invoke("GetReleaseGroupById", new object[] {
                        releaseGroupId});
            return ((ReleaseGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseGroupByIdAsync(long releaseGroupId) {
            this.GetReleaseGroupByIdAsync(releaseGroupId, null);
        }
        
        /// <remarks/>
        public void GetReleaseGroupByIdAsync(long releaseGroupId, object userState) {
            if ((this.GetReleaseGroupByIdOperationCompleted == null)) {
                this.GetReleaseGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetReleaseGroupById", new object[] {
                        releaseGroupId}, this.GetReleaseGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetReleaseGroupByIdOperationCompleted(object arg) {
            if ((this.GetReleaseGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseGroupByIdCompleted(this, new GetReleaseGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetReleaseGroupsByContri" +
            "butorId", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReleaseGroup[] GetReleaseGroupsByContributorId(long contributorId) {
            object[] results = this.Invoke("GetReleaseGroupsByContributorId", new object[] {
                        contributorId});
            return ((ReleaseGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseGroupsByContributorIdAsync(long contributorId) {
            this.GetReleaseGroupsByContributorIdAsync(contributorId, null);
        }
        
        /// <remarks/>
        public void GetReleaseGroupsByContributorIdAsync(long contributorId, object userState) {
            if ((this.GetReleaseGroupsByContributorIdOperationCompleted == null)) {
                this.GetReleaseGroupsByContributorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseGroupsByContributorIdOperationCompleted);
            }
            this.InvokeAsync("GetReleaseGroupsByContributorId", new object[] {
                        contributorId}, this.GetReleaseGroupsByContributorIdOperationCompleted, userState);
        }
        
        private void OnGetReleaseGroupsByContributorIdOperationCompleted(object arg) {
            if ((this.GetReleaseGroupsByContributorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseGroupsByContributorIdCompleted(this, new GetReleaseGroupsByContributorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetReleaseGroupProducts", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetReleaseGroupProducts(long releaseGroupId) {
            object[] results = this.Invoke("GetReleaseGroupProducts", new object[] {
                        releaseGroupId});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseGroupProductsAsync(long releaseGroupId) {
            this.GetReleaseGroupProductsAsync(releaseGroupId, null);
        }
        
        /// <remarks/>
        public void GetReleaseGroupProductsAsync(long releaseGroupId, object userState) {
            if ((this.GetReleaseGroupProductsOperationCompleted == null)) {
                this.GetReleaseGroupProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseGroupProductsOperationCompleted);
            }
            this.InvokeAsync("GetReleaseGroupProducts", new object[] {
                        releaseGroupId}, this.GetReleaseGroupProductsOperationCompleted, userState);
        }
        
        private void OnGetReleaseGroupProductsOperationCompleted(object arg) {
            if ((this.GetReleaseGroupProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseGroupProductsCompleted(this, new GetReleaseGroupProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetReleaseGroupContribut" +
            "ors", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contributor[] GetReleaseGroupContributors(long releaseGroupId) {
            object[] results = this.Invoke("GetReleaseGroupContributors", new object[] {
                        releaseGroupId});
            return ((Contributor[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseGroupContributorsAsync(long releaseGroupId) {
            this.GetReleaseGroupContributorsAsync(releaseGroupId, null);
        }
        
        /// <remarks/>
        public void GetReleaseGroupContributorsAsync(long releaseGroupId, object userState) {
            if ((this.GetReleaseGroupContributorsOperationCompleted == null)) {
                this.GetReleaseGroupContributorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseGroupContributorsOperationCompleted);
            }
            this.InvokeAsync("GetReleaseGroupContributors", new object[] {
                        releaseGroupId}, this.GetReleaseGroupContributorsOperationCompleted, userState);
        }
        
        private void OnGetReleaseGroupContributorsOperationCompleted(object arg) {
            if ((this.GetReleaseGroupContributorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseGroupContributorsCompleted(this, new GetReleaseGroupContributorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetUpdatedCoverArtInform" +
            "ation", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("coverArtAsset")]
        public CoverArtAsset[] GetUpdatedCoverArtInformation(System.DateTime dateFrom, System.DateTime dateTo, string isoCountryCode) {
            object[] results = this.Invoke("GetUpdatedCoverArtInformation", new object[] {
                        dateFrom,
                        dateTo,
                        isoCountryCode});
            return ((CoverArtAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatedCoverArtInformationAsync(System.DateTime dateFrom, System.DateTime dateTo, string isoCountryCode) {
            this.GetUpdatedCoverArtInformationAsync(dateFrom, dateTo, isoCountryCode, null);
        }
        
        /// <remarks/>
        public void GetUpdatedCoverArtInformationAsync(System.DateTime dateFrom, System.DateTime dateTo, string isoCountryCode, object userState) {
            if ((this.GetUpdatedCoverArtInformationOperationCompleted == null)) {
                this.GetUpdatedCoverArtInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatedCoverArtInformationOperationCompleted);
            }
            this.InvokeAsync("GetUpdatedCoverArtInformation", new object[] {
                        dateFrom,
                        dateTo,
                        isoCountryCode}, this.GetUpdatedCoverArtInformationOperationCompleted, userState);
        }
        
        private void OnGetUpdatedCoverArtInformationOperationCompleted(object arg) {
            if ((this.GetUpdatedCoverArtInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatedCoverArtInformationCompleted(this, new GetUpdatedCoverArtInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetBiographiesByProduct", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("biographyAsset")]
        public BiographyAsset[] GetBiographiesByProduct(int siteId, long productId) {
            object[] results = this.Invoke("GetBiographiesByProduct", new object[] {
                        siteId,
                        productId});
            return ((BiographyAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBiographiesByProductAsync(int siteId, long productId) {
            this.GetBiographiesByProductAsync(siteId, productId, null);
        }
        
        /// <remarks/>
        public void GetBiographiesByProductAsync(int siteId, long productId, object userState) {
            if ((this.GetBiographiesByProductOperationCompleted == null)) {
                this.GetBiographiesByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBiographiesByProductOperationCompleted);
            }
            this.InvokeAsync("GetBiographiesByProduct", new object[] {
                        siteId,
                        productId}, this.GetBiographiesByProductOperationCompleted, userState);
        }
        
        private void OnGetBiographiesByProductOperationCompleted(object arg) {
            if ((this.GetBiographiesByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBiographiesByProductCompleted(this, new GetBiographiesByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetBiographiesByArtist", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("biographyAsset")]
        public BiographyAsset[] GetBiographiesByArtist(int siteId, long contributorId) {
            object[] results = this.Invoke("GetBiographiesByArtist", new object[] {
                        siteId,
                        contributorId});
            return ((BiographyAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBiographiesByArtistAsync(int siteId, long contributorId) {
            this.GetBiographiesByArtistAsync(siteId, contributorId, null);
        }
        
        /// <remarks/>
        public void GetBiographiesByArtistAsync(int siteId, long contributorId, object userState) {
            if ((this.GetBiographiesByArtistOperationCompleted == null)) {
                this.GetBiographiesByArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBiographiesByArtistOperationCompleted);
            }
            this.InvokeAsync("GetBiographiesByArtist", new object[] {
                        siteId,
                        contributorId}, this.GetBiographiesByArtistOperationCompleted, userState);
        }
        
        private void OnGetBiographiesByArtistOperationCompleted(object arg) {
            if ((this.GetBiographiesByArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBiographiesByArtistCompleted(this, new GetBiographiesByArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPressPhotosByProduct", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("pressPhotoAsset")]
        public PressPhotoAsset[] GetPressPhotosByProduct(int siteId, long productId) {
            object[] results = this.Invoke("GetPressPhotosByProduct", new object[] {
                        siteId,
                        productId});
            return ((PressPhotoAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressPhotosByProductAsync(int siteId, long productId) {
            this.GetPressPhotosByProductAsync(siteId, productId, null);
        }
        
        /// <remarks/>
        public void GetPressPhotosByProductAsync(int siteId, long productId, object userState) {
            if ((this.GetPressPhotosByProductOperationCompleted == null)) {
                this.GetPressPhotosByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressPhotosByProductOperationCompleted);
            }
            this.InvokeAsync("GetPressPhotosByProduct", new object[] {
                        siteId,
                        productId}, this.GetPressPhotosByProductOperationCompleted, userState);
        }
        
        private void OnGetPressPhotosByProductOperationCompleted(object arg) {
            if ((this.GetPressPhotosByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressPhotosByProductCompleted(this, new GetPressPhotosByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPressPhotosByArtist", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("pressPhotoAsset")]
        public PressPhotoAsset[] GetPressPhotosByArtist(int siteId, long contributorId) {
            object[] results = this.Invoke("GetPressPhotosByArtist", new object[] {
                        siteId,
                        contributorId});
            return ((PressPhotoAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressPhotosByArtistAsync(int siteId, long contributorId) {
            this.GetPressPhotosByArtistAsync(siteId, contributorId, null);
        }
        
        /// <remarks/>
        public void GetPressPhotosByArtistAsync(int siteId, long contributorId, object userState) {
            if ((this.GetPressPhotosByArtistOperationCompleted == null)) {
                this.GetPressPhotosByArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressPhotosByArtistOperationCompleted);
            }
            this.InvokeAsync("GetPressPhotosByArtist", new object[] {
                        siteId,
                        contributorId}, this.GetPressPhotosByArtistOperationCompleted, userState);
        }
        
        private void OnGetPressPhotosByArtistOperationCompleted(object arg) {
            if ((this.GetPressPhotosByArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressPhotosByArtistCompleted(this, new GetPressPhotosByArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPublicityPhotosByProd" +
            "uct", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("publicityPhotoAsset")]
        public PublicityPhotoAsset[] GetPublicityPhotosByProduct(int siteId, long productId) {
            object[] results = this.Invoke("GetPublicityPhotosByProduct", new object[] {
                        siteId,
                        productId});
            return ((PublicityPhotoAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicityPhotosByProductAsync(int siteId, long productId) {
            this.GetPublicityPhotosByProductAsync(siteId, productId, null);
        }
        
        /// <remarks/>
        public void GetPublicityPhotosByProductAsync(int siteId, long productId, object userState) {
            if ((this.GetPublicityPhotosByProductOperationCompleted == null)) {
                this.GetPublicityPhotosByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicityPhotosByProductOperationCompleted);
            }
            this.InvokeAsync("GetPublicityPhotosByProduct", new object[] {
                        siteId,
                        productId}, this.GetPublicityPhotosByProductOperationCompleted, userState);
        }
        
        private void OnGetPublicityPhotosByProductOperationCompleted(object arg) {
            if ((this.GetPublicityPhotosByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicityPhotosByProductCompleted(this, new GetPublicityPhotosByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetCoverArtByUPCList", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("coverArtMetaData")]
        public CoverArtMetaData[] GetCoverArtByUPCList(string[] upcs) {
            object[] results = this.Invoke("GetCoverArtByUPCList", new object[] {
                        upcs});
            return ((CoverArtMetaData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCoverArtByUPCListAsync(string[] upcs) {
            this.GetCoverArtByUPCListAsync(upcs, null);
        }
        
        /// <remarks/>
        public void GetCoverArtByUPCListAsync(string[] upcs, object userState) {
            if ((this.GetCoverArtByUPCListOperationCompleted == null)) {
                this.GetCoverArtByUPCListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoverArtByUPCListOperationCompleted);
            }
            this.InvokeAsync("GetCoverArtByUPCList", new object[] {
                        upcs}, this.GetCoverArtByUPCListOperationCompleted, userState);
        }
        
        private void OnGetCoverArtByUPCListOperationCompleted(object arg) {
            if ((this.GetCoverArtByUPCListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoverArtByUPCListCompleted(this, new GetCoverArtByUPCListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPublicityPhotosByArti" +
            "st", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("publicityPhotoAsset")]
        public PublicityPhotoAsset[] GetPublicityPhotosByArtist(int siteId, long contributorId) {
            object[] results = this.Invoke("GetPublicityPhotosByArtist", new object[] {
                        siteId,
                        contributorId});
            return ((PublicityPhotoAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicityPhotosByArtistAsync(int siteId, long contributorId) {
            this.GetPublicityPhotosByArtistAsync(siteId, contributorId, null);
        }
        
        /// <remarks/>
        public void GetPublicityPhotosByArtistAsync(int siteId, long contributorId, object userState) {
            if ((this.GetPublicityPhotosByArtistOperationCompleted == null)) {
                this.GetPublicityPhotosByArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicityPhotosByArtistOperationCompleted);
            }
            this.InvokeAsync("GetPublicityPhotosByArtist", new object[] {
                        siteId,
                        contributorId}, this.GetPublicityPhotosByArtistOperationCompleted, userState);
        }
        
        private void OnGetPublicityPhotosByArtistOperationCompleted(object arg) {
            if ((this.GetPublicityPhotosByArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicityPhotosByArtistCompleted(this, new GetPublicityPhotosByArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetArtistMerchandisingAs" +
            "setsByBarcode", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("artistMerchandisingAsset")]
        public ArtistMerchandisingAsset[] GetArtistMerchandisingAssetsByBarcode(int siteId, string barcode) {
            object[] results = this.Invoke("GetArtistMerchandisingAssetsByBarcode", new object[] {
                        siteId,
                        barcode});
            return ((ArtistMerchandisingAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistMerchandisingAssetsByBarcodeAsync(int siteId, string barcode) {
            this.GetArtistMerchandisingAssetsByBarcodeAsync(siteId, barcode, null);
        }
        
        /// <remarks/>
        public void GetArtistMerchandisingAssetsByBarcodeAsync(int siteId, string barcode, object userState) {
            if ((this.GetArtistMerchandisingAssetsByBarcodeOperationCompleted == null)) {
                this.GetArtistMerchandisingAssetsByBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistMerchandisingAssetsByBarcodeOperationCompleted);
            }
            this.InvokeAsync("GetArtistMerchandisingAssetsByBarcode", new object[] {
                        siteId,
                        barcode}, this.GetArtistMerchandisingAssetsByBarcodeOperationCompleted, userState);
        }
        
        private void OnGetArtistMerchandisingAssetsByBarcodeOperationCompleted(object arg) {
            if ((this.GetArtistMerchandisingAssetsByBarcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistMerchandisingAssetsByBarcodeCompleted(this, new GetArtistMerchandisingAssetsByBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPressReleasesByProduc" +
            "t", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("pressReleaseAsset")]
        public PressReleaseAsset[] GetPressReleasesByProduct(int siteId, long productId) {
            object[] results = this.Invoke("GetPressReleasesByProduct", new object[] {
                        siteId,
                        productId});
            return ((PressReleaseAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressReleasesByProductAsync(int siteId, long productId) {
            this.GetPressReleasesByProductAsync(siteId, productId, null);
        }
        
        /// <remarks/>
        public void GetPressReleasesByProductAsync(int siteId, long productId, object userState) {
            if ((this.GetPressReleasesByProductOperationCompleted == null)) {
                this.GetPressReleasesByProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressReleasesByProductOperationCompleted);
            }
            this.InvokeAsync("GetPressReleasesByProduct", new object[] {
                        siteId,
                        productId}, this.GetPressReleasesByProductOperationCompleted, userState);
        }
        
        private void OnGetPressReleasesByProductOperationCompleted(object arg) {
            if ((this.GetPressReleasesByProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressReleasesByProductCompleted(this, new GetPressReleasesByProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetPressReleasesByArtist" +
            "", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("pressReleaseAsset")]
        public PressReleaseAsset[] GetPressReleasesByArtist(int siteId, long contributorId) {
            object[] results = this.Invoke("GetPressReleasesByArtist", new object[] {
                        siteId,
                        contributorId});
            return ((PressReleaseAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPressReleasesByArtistAsync(int siteId, long contributorId) {
            this.GetPressReleasesByArtistAsync(siteId, contributorId, null);
        }
        
        /// <remarks/>
        public void GetPressReleasesByArtistAsync(int siteId, long contributorId, object userState) {
            if ((this.GetPressReleasesByArtistOperationCompleted == null)) {
                this.GetPressReleasesByArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPressReleasesByArtistOperationCompleted);
            }
            this.InvokeAsync("GetPressReleasesByArtist", new object[] {
                        siteId,
                        contributorId}, this.GetPressReleasesByArtistOperationCompleted, userState);
        }
        
        private void OnGetPressReleasesByArtistOperationCompleted(object arg) {
            if ((this.GetPressReleasesByArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPressReleasesByArtistCompleted(this, new GetPressReleasesByArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetJpegRgbAssetAsStream", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetJpegRgbAssetAsStream(int assetId, int widthInPixels, int heightInPixels, int dpi) {
            object[] results = this.Invoke("GetJpegRgbAssetAsStream", new object[] {
                        assetId,
                        widthInPixels,
                        heightInPixels,
                        dpi});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJpegRgbAssetAsStreamAsync(int assetId, int widthInPixels, int heightInPixels, int dpi) {
            this.GetJpegRgbAssetAsStreamAsync(assetId, widthInPixels, heightInPixels, dpi, null);
        }
        
        /// <remarks/>
        public void GetJpegRgbAssetAsStreamAsync(int assetId, int widthInPixels, int heightInPixels, int dpi, object userState) {
            if ((this.GetJpegRgbAssetAsStreamOperationCompleted == null)) {
                this.GetJpegRgbAssetAsStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJpegRgbAssetAsStreamOperationCompleted);
            }
            this.InvokeAsync("GetJpegRgbAssetAsStream", new object[] {
                        assetId,
                        widthInPixels,
                        heightInPixels,
                        dpi}, this.GetJpegRgbAssetAsStreamOperationCompleted, userState);
        }
        
        private void OnGetJpegRgbAssetAsStreamOperationCompleted(object arg) {
            if ((this.GetJpegRgbAssetAsStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJpegRgbAssetAsStreamCompleted(this, new GetJpegRgbAssetAsStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetDocumentAssetAsStream" +
            "", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentAssetAsStream(int assetId) {
            object[] results = this.Invoke("GetDocumentAssetAsStream", new object[] {
                        assetId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAssetAsStreamAsync(int assetId) {
            this.GetDocumentAssetAsStreamAsync(assetId, null);
        }
        
        /// <remarks/>
        public void GetDocumentAssetAsStreamAsync(int assetId, object userState) {
            if ((this.GetDocumentAssetAsStreamOperationCompleted == null)) {
                this.GetDocumentAssetAsStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentAssetAsStreamOperationCompleted);
            }
            this.InvokeAsync("GetDocumentAssetAsStream", new object[] {
                        assetId}, this.GetDocumentAssetAsStreamOperationCompleted, userState);
        }
        
        private void OnGetDocumentAssetAsStreamOperationCompleted(object arg) {
            if ((this.GetDocumentAssetAsStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentAssetAsStreamCompleted(this, new GetDocumentAssetAsStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetNewsArticlesByArtist", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsArticle[] GetNewsArticlesByArtist(int siteId, long contributorId) {
            object[] results = this.Invoke("GetNewsArticlesByArtist", new object[] {
                        siteId,
                        contributorId});
            return ((NewsArticle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsArticlesByArtistAsync(int siteId, long contributorId) {
            this.GetNewsArticlesByArtistAsync(siteId, contributorId, null);
        }
        
        /// <remarks/>
        public void GetNewsArticlesByArtistAsync(int siteId, long contributorId, object userState) {
            if ((this.GetNewsArticlesByArtistOperationCompleted == null)) {
                this.GetNewsArticlesByArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsArticlesByArtistOperationCompleted);
            }
            this.InvokeAsync("GetNewsArticlesByArtist", new object[] {
                        siteId,
                        contributorId}, this.GetNewsArticlesByArtistOperationCompleted, userState);
        }
        
        private void OnGetNewsArticlesByArtistOperationCompleted(object arg) {
            if ((this.GetNewsArticlesByArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsArticlesByArtistCompleted(this, new GetNewsArticlesByArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetNewsArticlesByDateRan" +
            "ge", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsArticle[] GetNewsArticlesByDateRange(int siteId, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetNewsArticlesByDateRange", new object[] {
                        siteId,
                        dateFrom,
                        dateTo});
            return ((NewsArticle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsArticlesByDateRangeAsync(int siteId, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetNewsArticlesByDateRangeAsync(siteId, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetNewsArticlesByDateRangeAsync(int siteId, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetNewsArticlesByDateRangeOperationCompleted == null)) {
                this.GetNewsArticlesByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsArticlesByDateRangeOperationCompleted);
            }
            this.InvokeAsync("GetNewsArticlesByDateRange", new object[] {
                        siteId,
                        dateFrom,
                        dateTo}, this.GetNewsArticlesByDateRangeOperationCompleted, userState);
        }
        
        private void OnGetNewsArticlesByDateRangeOperationCompleted(object arg) {
            if ((this.GetNewsArticlesByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsArticlesByDateRangeCompleted(this, new GetNewsArticlesByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetNewsArticles", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsArticle[] GetNewsArticles(int siteId, long contributorId, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetNewsArticles", new object[] {
                        siteId,
                        contributorId,
                        dateFrom,
                        dateTo});
            return ((NewsArticle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsArticlesAsync(int siteId, long contributorId, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetNewsArticlesAsync(siteId, contributorId, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetNewsArticlesAsync(int siteId, long contributorId, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetNewsArticlesOperationCompleted == null)) {
                this.GetNewsArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsArticlesOperationCompleted);
            }
            this.InvokeAsync("GetNewsArticles", new object[] {
                        siteId,
                        contributorId,
                        dateFrom,
                        dateTo}, this.GetNewsArticlesOperationCompleted, userState);
        }
        
        private void OnGetNewsArticlesOperationCompleted(object arg) {
            if ((this.GetNewsArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsArticlesCompleted(this, new GetNewsArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/GetNewsArticleByContentI" +
            "d", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("newsArticle", IsNullable=true)]
        public NewsArticle GetNewsArticleByContentId(int siteId, int contentId) {
            object[] results = this.Invoke("GetNewsArticleByContentId", new object[] {
                        siteId,
                        contentId});
            return ((NewsArticle)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsArticleByContentIdAsync(int siteId, int contentId) {
            this.GetNewsArticleByContentIdAsync(siteId, contentId, null);
        }
        
        /// <remarks/>
        public void GetNewsArticleByContentIdAsync(int siteId, int contentId, object userState) {
            if ((this.GetNewsArticleByContentIdOperationCompleted == null)) {
                this.GetNewsArticleByContentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsArticleByContentIdOperationCompleted);
            }
            this.InvokeAsync("GetNewsArticleByContentId", new object[] {
                        siteId,
                        contentId}, this.GetNewsArticleByContentIdOperationCompleted, userState);
        }
        
        private void OnGetNewsArticleByContentIdOperationCompleted(object arg) {
            if ((this.GetNewsArticleByContentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsArticleByContentIdCompleted(this, new GetNewsArticleByContentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/Login", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login(string userName, string encryptedPassword) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        encryptedPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string encryptedPassword) {
            this.LoginAsync(userName, encryptedPassword, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string encryptedPassword, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        encryptedPassword}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://umusic.com/itdi/centralcatalogue/webservices/v2.0/Logout", RequestNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", ResponseNamespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class Contributor {
        
        private long contributorIdField;
        
        private string formattedNameField;
        
        private string roleField;
        
        private int sequenceField;
        
        private bool mainContributorFlagField;
        
        private string firstNameField;
        
        private string lastNamePrefixField;
        
        private string lastNameGroupField;
        
        private CodeNameType companyField;
        
        private CodeNameType companyCountryField;
        
        private int accountIdField;
        
        private int roleIdField;
        
        private string roleCreditPrefixField;
        
        private CodeNameType roleGroupField;
        
        /// <remarks/>
        public long contributorId {
            get {
                return this.contributorIdField;
            }
            set {
                this.contributorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formattedName {
            get {
                return this.formattedNameField;
            }
            set {
                this.formattedNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public bool mainContributorFlag {
            get {
                return this.mainContributorFlagField;
            }
            set {
                this.mainContributorFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastNamePrefix {
            get {
                return this.lastNamePrefixField;
            }
            set {
                this.lastNamePrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastNameGroup {
            get {
                return this.lastNameGroupField;
            }
            set {
                this.lastNameGroupField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType companyCountry {
            get {
                return this.companyCountryField;
            }
            set {
                this.companyCountryField = value;
            }
        }
        
        /// <remarks/>
        public int accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string roleCreditPrefix {
            get {
                return this.roleCreditPrefixField;
            }
            set {
                this.roleCreditPrefixField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType roleGroup {
            get {
                return this.roleGroupField;
            }
            set {
                this.roleGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class CodeNameType {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class NewsArticle {
        
        private int contentIdField;
        
        private string titleField;
        
        private string summaryField;
        
        private string bodyField;
        
        private System.Nullable<System.DateTime> publicationDateField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private Contributor[] relatedContributorsField;
        
        /// <remarks/>
        public int contentId {
            get {
                return this.contentIdField;
            }
            set {
                this.contentIdField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contributor")]
        public Contributor[] relatedContributors {
            get {
                return this.relatedContributorsField;
            }
            set {
                this.relatedContributorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class CoverArtMetaData {
        
        private string assetypeField;
        
        private string copyrightField;
        
        private string dateCreatedField;
        
        private string dateModifiedField;
        
        private string descriptionField;
        
        private string toenailURLField;
        
        private string thumbnailURLField;
        
        private bool isPrimaryCoverField;
        
        private string photoCreditField;
        
        private long assetIDField;
        
        private string upcField;
        
        /// <remarks/>
        public string assetype {
            get {
                return this.assetypeField;
            }
            set {
                this.assetypeField = value;
            }
        }
        
        /// <remarks/>
        public string copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        public string dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string dateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string toenailURL {
            get {
                return this.toenailURLField;
            }
            set {
                this.toenailURLField = value;
            }
        }
        
        /// <remarks/>
        public string thumbnailURL {
            get {
                return this.thumbnailURLField;
            }
            set {
                this.thumbnailURLField = value;
            }
        }
        
        /// <remarks/>
        public bool isPrimaryCover {
            get {
                return this.isPrimaryCoverField;
            }
            set {
                this.isPrimaryCoverField = value;
            }
        }
        
        /// <remarks/>
        public string photoCredit {
            get {
                return this.photoCreditField;
            }
            set {
                this.photoCreditField = value;
            }
        }
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public string upc {
            get {
                return this.upcField;
            }
            set {
                this.upcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class ReleaseGroup {
        
        private long releaseGroupIdField;
        
        private string contributorSummaryField;
        
        private string titleField;
        
        private ProductGrouping productGroupingField;
        
        private System.DateTime lastUpdatedField;
        
        private Product referenceProductField;
        
        private CodeNameType[] marketingDivisionsField;
        
        private string commentField;
        
        private Product[] productsField;
        
        private Contributor[] contributorsField;
        
        /// <remarks/>
        public long releaseGroupId {
            get {
                return this.releaseGroupIdField;
            }
            set {
                this.releaseGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string contributorSummary {
            get {
                return this.contributorSummaryField;
            }
            set {
                this.contributorSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public ProductGrouping productGrouping {
            get {
                return this.productGroupingField;
            }
            set {
                this.productGroupingField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public Product referenceProduct {
            get {
                return this.referenceProductField;
            }
            set {
                this.referenceProductField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("codeNameType", IsNullable=false)]
        public CodeNameType[] marketingDivisions {
            get {
                return this.marketingDivisionsField;
            }
            set {
                this.marketingDivisionsField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("product")]
        public Product[] products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contributor")]
        public Contributor[] contributors {
            get {
                return this.contributorsField;
            }
            set {
                this.contributorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public enum ProductGrouping {
        
        /// <remarks/>
        Album,
        
        /// <remarks/>
        CDiReady,
        
        /// <remarks/>
        Mobile,
        
        /// <remarks/>
        Merchandise,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        Video,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class Product {
        
        private long productIdField;
        
        private string upcField;
        
        private System.DateTime lastUpdatedField;
        
        private string contributorSummaryField;
        
        private Contributor[] artistInfoField;
        
        private string titleField;
        
        private string musicTypeField;
        
        private string versionTitleField;
        
        private string genreField;
        
        private Format formatInfoField;
        
        private TerritoryRelease[] releaseInfoField;
        
        private CoverArtAsset coverArtField;
        
        private int componentCountField;
        
        private bool clipsAvailableField;
        
        private bool finalLabelCopyField;
        
        private bool explicitLyricsField;
        
        private RepertoireOwner repOwnerInfoField;
        
        private object releaseGroupIDField;
        
        /// <remarks/>
        public long productId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string upc {
            get {
                return this.upcField;
            }
            set {
                this.upcField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string contributorSummary {
            get {
                return this.contributorSummaryField;
            }
            set {
                this.contributorSummaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contributor")]
        public Contributor[] ArtistInfo {
            get {
                return this.artistInfoField;
            }
            set {
                this.artistInfoField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string musicType {
            get {
                return this.musicTypeField;
            }
            set {
                this.musicTypeField = value;
            }
        }
        
        /// <remarks/>
        public string versionTitle {
            get {
                return this.versionTitleField;
            }
            set {
                this.versionTitleField = value;
            }
        }
        
        /// <remarks/>
        public string genre {
            get {
                return this.genreField;
            }
            set {
                this.genreField = value;
            }
        }
        
        /// <remarks/>
        public Format formatInfo {
            get {
                return this.formatInfoField;
            }
            set {
                this.formatInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("territoryRelease")]
        public TerritoryRelease[] releaseInfo {
            get {
                return this.releaseInfoField;
            }
            set {
                this.releaseInfoField = value;
            }
        }
        
        /// <remarks/>
        public CoverArtAsset coverArt {
            get {
                return this.coverArtField;
            }
            set {
                this.coverArtField = value;
            }
        }
        
        /// <remarks/>
        public int componentCount {
            get {
                return this.componentCountField;
            }
            set {
                this.componentCountField = value;
            }
        }
        
        /// <remarks/>
        public bool clipsAvailable {
            get {
                return this.clipsAvailableField;
            }
            set {
                this.clipsAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool finalLabelCopy {
            get {
                return this.finalLabelCopyField;
            }
            set {
                this.finalLabelCopyField = value;
            }
        }
        
        /// <remarks/>
        public bool explicitLyrics {
            get {
                return this.explicitLyricsField;
            }
            set {
                this.explicitLyricsField = value;
            }
        }
        
        /// <remarks/>
        public RepertoireOwner repOwnerInfo {
            get {
                return this.repOwnerInfoField;
            }
            set {
                this.repOwnerInfoField = value;
            }
        }
        
        /// <remarks/>
        public object releaseGroupID {
            get {
                return this.releaseGroupIDField;
            }
            set {
                this.releaseGroupIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class Format {
        
        private ReleaseFormatType physicalFormatField;
        
        private ReleaseFormatType digitalFormatField;
        
        /// <remarks/>
        public ReleaseFormatType physicalFormat {
            get {
                return this.physicalFormatField;
            }
            set {
                this.physicalFormatField = value;
            }
        }
        
        /// <remarks/>
        public ReleaseFormatType digitalFormat {
            get {
                return this.digitalFormatField;
            }
            set {
                this.digitalFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class ReleaseFormatType {
        
        private string codeField;
        
        private string nameField;
        
        private string productGroupingField;
        
        private string carrierCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string productGrouping {
            get {
                return this.productGroupingField;
            }
            set {
                this.productGroupingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string carrierCode {
            get {
                return this.carrierCodeField;
            }
            set {
                this.carrierCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class TerritoryRelease {
        
        private CodeNameType countryField;
        
        private string priceCodeField;
        
        private CurrencyType ppdField;
        
        private string physicalReleaseDateField;
        
        private string digitalReleaseDateField;
        
        private string catalogueNumberField;
        
        /// <remarks/>
        public CodeNameType country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string priceCode {
            get {
                return this.priceCodeField;
            }
            set {
                this.priceCodeField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyType ppd {
            get {
                return this.ppdField;
            }
            set {
                this.ppdField = value;
            }
        }
        
        /// <remarks/>
        public string physicalReleaseDate {
            get {
                return this.physicalReleaseDateField;
            }
            set {
                this.physicalReleaseDateField = value;
            }
        }
        
        /// <remarks/>
        public string digitalReleaseDate {
            get {
                return this.digitalReleaseDateField;
            }
            set {
                this.digitalReleaseDateField = value;
            }
        }
        
        /// <remarks/>
        public string catalogueNumber {
            get {
                return this.catalogueNumberField;
            }
            set {
                this.catalogueNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class CurrencyType {
        
        private string currencyCodeField;
        
        private string amountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string currencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class CoverArtAsset : Asset {
        
        private string coverArtToenailUrlField;
        
        private string coverArtThumbnailUrlField;
        
        private bool availableField;
        
        private string isrcField;
        
        private string categoryField;
        
        /// <remarks/>
        public string coverArtToenailUrl {
            get {
                return this.coverArtToenailUrlField;
            }
            set {
                this.coverArtToenailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string coverArtThumbnailUrl {
            get {
                return this.coverArtThumbnailUrlField;
            }
            set {
                this.coverArtThumbnailUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        public string isrc {
            get {
                return this.isrcField;
            }
            set {
                this.isrcField = value;
            }
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PressReleaseAsset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ArtistMerchandisingAsset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PublicityPhotoAsset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PressPhotoAsset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BiographyAsset))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoverArtAsset))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public abstract partial class Asset {
        
        private int assetIdField;
        
        private System.DateTime publicationDateField;
        
        private AssetSource sourceField;
        
        private bool isRestrictedByCountryField;
        
        private CodeNameType[] countryRestrictionsField;
        
        private long productIdField;
        
        private string upcField;
        
        private string artistField;
        
        private string titleField;
        
        private long fileSizeField;
        
        private FormatType formatField;
        
        private string uploadedByField;
        
        private string sourceFileField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int assetId {
            get {
                return this.assetIdField;
            }
            set {
                this.assetIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime publicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        public AssetSource source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public bool isRestrictedByCountry {
            get {
                return this.isRestrictedByCountryField;
            }
            set {
                this.isRestrictedByCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("codeNameType", IsNullable=false)]
        public CodeNameType[] countryRestrictions {
            get {
                return this.countryRestrictionsField;
            }
            set {
                this.countryRestrictionsField = value;
            }
        }
        
        /// <remarks/>
        public long productId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string upc {
            get {
                return this.upcField;
            }
            set {
                this.upcField = value;
            }
        }
        
        /// <remarks/>
        public string artist {
            get {
                return this.artistField;
            }
            set {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public FormatType format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public string uploadedBy {
            get {
                return this.uploadedByField;
            }
            set {
                this.uploadedByField = value;
            }
        }
        
        /// <remarks/>
        public string sourceFile {
            get {
                return this.sourceFileField;
            }
            set {
                this.sourceFileField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public enum AssetSource {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AEC,
        
        /// <remarks/>
        HAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FormatType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        TIFF,
        
        /// <remarks/>
        JFIF,
        
        /// <remarks/>
        JPEG,
        
        /// <remarks/>
        EPS,
        
        /// <remarks/>
        PS,
        
        /// <remarks/>
        GIF,
        
        /// <remarks/>
        BMP,
        
        /// <remarks/>
        PDF,
        
        /// <remarks/>
        Word,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Excel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class PressReleaseAsset : Asset {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class ArtistMerchandisingAsset : Asset {
        
        private string toenailUrlField;
        
        private string thumbnailUrlField;
        
        private string labelDescriptionField;
        
        private string originalFileNameField;
        
        /// <remarks/>
        public string toenailUrl {
            get {
                return this.toenailUrlField;
            }
            set {
                this.toenailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string thumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string labelDescription {
            get {
                return this.labelDescriptionField;
            }
            set {
                this.labelDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string originalFileName {
            get {
                return this.originalFileNameField;
            }
            set {
                this.originalFileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class PublicityPhotoAsset : Asset {
        
        private string toenailUrlField;
        
        private string thumbnailUrlField;
        
        /// <remarks/>
        public string toenailUrl {
            get {
                return this.toenailUrlField;
            }
            set {
                this.toenailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string thumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class PressPhotoAsset : Asset {
        
        private string toenailUrlField;
        
        private string thumbnailUrlField;
        
        /// <remarks/>
        public string toenailUrl {
            get {
                return this.toenailUrlField;
            }
            set {
                this.toenailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string thumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class BiographyAsset : Asset {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class RepertoireOwner {
        
        private CodeNameType countryField;
        
        private CodeNameType companyField;
        
        private CodeNameType divisionField;
        
        private CodeNameType labelField;
        
        /// <remarks/>
        public CodeNameType country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
            }
        }
        
        /// <remarks/>
        public CodeNameType label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class Track {
        
        private long trackIdField;
        
        private string isrcField;
        
        private int sideField;
        
        private int trackNumberField;
        
        private string durationField;
        
        private string trackTitleField;
        
        private string trackVersionTitleField;
        
        private string clipUrlField;
        
        private string contributorSummaryField;
        
        private Contributor[] contributorsField;
        
        private Contributor composerField;
        
        private string worksTitleField;
        
        private bool isGhostTrackField;
        
        /// <remarks/>
        public long trackId {
            get {
                return this.trackIdField;
            }
            set {
                this.trackIdField = value;
            }
        }
        
        /// <remarks/>
        public string isrc {
            get {
                return this.isrcField;
            }
            set {
                this.isrcField = value;
            }
        }
        
        /// <remarks/>
        public int side {
            get {
                return this.sideField;
            }
            set {
                this.sideField = value;
            }
        }
        
        /// <remarks/>
        public int trackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        public string duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string trackTitle {
            get {
                return this.trackTitleField;
            }
            set {
                this.trackTitleField = value;
            }
        }
        
        /// <remarks/>
        public string trackVersionTitle {
            get {
                return this.trackVersionTitleField;
            }
            set {
                this.trackVersionTitleField = value;
            }
        }
        
        /// <remarks/>
        public string clipUrl {
            get {
                return this.clipUrlField;
            }
            set {
                this.clipUrlField = value;
            }
        }
        
        /// <remarks/>
        public string contributorSummary {
            get {
                return this.contributorSummaryField;
            }
            set {
                this.contributorSummaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("trackContributor")]
        public Contributor[] contributors {
            get {
                return this.contributorsField;
            }
            set {
                this.contributorsField = value;
            }
        }
        
        /// <remarks/>
        public Contributor composer {
            get {
                return this.composerField;
            }
            set {
                this.composerField = value;
            }
        }
        
        /// <remarks/>
        public string worksTitle {
            get {
                return this.worksTitleField;
            }
            set {
                this.worksTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool isGhostTrack {
            get {
                return this.isGhostTrackField;
            }
            set {
                this.isGhostTrackField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class Component {
        
        private string upcField;
        
        private int componentNumberField;
        
        private string componentTitleField;
        
        private string componentVersionTitleField;
        
        private Track[] tracksField;
        
        /// <remarks/>
        public string upc {
            get {
                return this.upcField;
            }
            set {
                this.upcField = value;
            }
        }
        
        /// <remarks/>
        public int componentNumber {
            get {
                return this.componentNumberField;
            }
            set {
                this.componentNumberField = value;
            }
        }
        
        /// <remarks/>
        public string componentTitle {
            get {
                return this.componentTitleField;
            }
            set {
                this.componentTitleField = value;
            }
        }
        
        /// <remarks/>
        public string componentVersionTitle {
            get {
                return this.componentVersionTitleField;
            }
            set {
                this.componentVersionTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("track")]
        public Track[] tracks {
            get {
                return this.tracksField;
            }
            set {
                this.tracksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://umusic.com/itdi/centralcatalogue/webservices/v2.0")]
    public partial class ComponentCollection {
        
        private long productIdField;
        
        private string upcField;
        
        private Component[] componentsField;
        
        /// <remarks/>
        public long productId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string upc {
            get {
                return this.upcField;
            }
            set {
                this.upcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("component")]
        public Component[] components {
            get {
                return this.componentsField;
            }
            set {
                this.componentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetContributorsByProductCompletedEventHandler(object sender, GetContributorsByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContributorsByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContributorsByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contributor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contributor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductIdByUpcCompletedEventHandler(object sender, GetProductIdByUpcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductIdByUpcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductIdByUpcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductIdListByUpcCompletedEventHandler(object sender, GetProductIdListByUpcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductIdListByUpcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductIdListByUpcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductByIdCompletedEventHandler(object sender, GetProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductListByIdCompletedEventHandler(object sender, GetProductListByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductListByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductListByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTracklistingForProductCompletedEventHandler(object sender, GetTracklistingForProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTracklistingForProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTracklistingForProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ComponentCollection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ComponentCollection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductIdsByReleaseDateCompletedEventHandler(object sender, GetProductIdsByReleaseDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductIdsByReleaseDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductIdsByReleaseDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProductsByContributorIdCompletedEventHandler(object sender, GetProductsByContributorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsByContributorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsByContributorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReleaseGroupByIdCompletedEventHandler(object sender, GetReleaseGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReleaseGroupsByContributorIdCompletedEventHandler(object sender, GetReleaseGroupsByContributorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseGroupsByContributorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseGroupsByContributorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReleaseGroupProductsCompletedEventHandler(object sender, GetReleaseGroupProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseGroupProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseGroupProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetReleaseGroupContributorsCompletedEventHandler(object sender, GetReleaseGroupContributorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseGroupContributorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseGroupContributorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contributor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contributor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUpdatedCoverArtInformationCompletedEventHandler(object sender, GetUpdatedCoverArtInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatedCoverArtInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatedCoverArtInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CoverArtAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CoverArtAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBiographiesByProductCompletedEventHandler(object sender, GetBiographiesByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBiographiesByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBiographiesByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BiographyAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BiographyAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBiographiesByArtistCompletedEventHandler(object sender, GetBiographiesByArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBiographiesByArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBiographiesByArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BiographyAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BiographyAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPressPhotosByProductCompletedEventHandler(object sender, GetPressPhotosByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressPhotosByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressPhotosByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressPhotoAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressPhotoAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPressPhotosByArtistCompletedEventHandler(object sender, GetPressPhotosByArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressPhotosByArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressPhotosByArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressPhotoAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressPhotoAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPublicityPhotosByProductCompletedEventHandler(object sender, GetPublicityPhotosByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicityPhotosByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicityPhotosByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PublicityPhotoAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PublicityPhotoAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCoverArtByUPCListCompletedEventHandler(object sender, GetCoverArtByUPCListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoverArtByUPCListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoverArtByUPCListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CoverArtMetaData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CoverArtMetaData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPublicityPhotosByArtistCompletedEventHandler(object sender, GetPublicityPhotosByArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicityPhotosByArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicityPhotosByArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PublicityPhotoAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PublicityPhotoAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetArtistMerchandisingAssetsByBarcodeCompletedEventHandler(object sender, GetArtistMerchandisingAssetsByBarcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistMerchandisingAssetsByBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistMerchandisingAssetsByBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtistMerchandisingAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtistMerchandisingAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPressReleasesByProductCompletedEventHandler(object sender, GetPressReleasesByProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressReleasesByProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressReleasesByProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressReleaseAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressReleaseAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetPressReleasesByArtistCompletedEventHandler(object sender, GetPressReleasesByArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPressReleasesByArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPressReleasesByArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PressReleaseAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PressReleaseAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetJpegRgbAssetAsStreamCompletedEventHandler(object sender, GetJpegRgbAssetAsStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJpegRgbAssetAsStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJpegRgbAssetAsStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDocumentAssetAsStreamCompletedEventHandler(object sender, GetDocumentAssetAsStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentAssetAsStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentAssetAsStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNewsArticlesByArtistCompletedEventHandler(object sender, GetNewsArticlesByArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsArticlesByArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsArticlesByArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsArticle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsArticle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNewsArticlesByDateRangeCompletedEventHandler(object sender, GetNewsArticlesByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsArticlesByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsArticlesByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsArticle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsArticle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNewsArticlesCompletedEventHandler(object sender, GetNewsArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsArticle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsArticle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNewsArticleByContentIdCompletedEventHandler(object sender, GetNewsArticleByContentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsArticleByContentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsArticleByContentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsArticle Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsArticle)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591